1112 : 用這個 API 創建一個表格 (要加入 CSS )
const API = fetch("https://data.moa.gov.tw/api/v1/PesticideCompanyType/");
 useEffect(() => {
   fetch("https:data.moa.gov.tw/api/v1/PesticideCompanyType/").then((res) =>
     res.json().then((data) => {
       setData(data.Data);
     })
   );
})

1112 : 
1.Life Cycle 2.Props 3.useRef 4.ref={} 的綁定練習 5.全域與區域變數差異
1.Life Cycle :
生命週期 (Life Cycle) 指的是一個元件從建立 (Mounting)、更新 (Updating)、到銷毀 (Unmounting) 的過程中發生的事件。
例如 ->
useEffect(()=>{
  console.log("Life Cycle Start")

  return (
    清理效果
    console.log("Life Cycle End")
  )
})

2.Props :
Props 是 React 元件間傳遞的資料，是一種只讀的值。
可以用解構的方式取出，像是 const {name,age,where} = props，也可以用 props.name 、props["age"] 取內部的值。
可以供 Function 使用 map、filter.....等操作

3.useRef : 
useRef 是用來存放一個「可變的值」，它不會因為元件的重新渲染而被重置。
特性是 : 
useRef 返回一個物件 { current: <value> }。
ref.current 可以存取或更新該值，但這種改變不會觸發重新渲染。
用途是 : 用在操作或控制 DOM、如倒數計時器的參數

4.如果我設定 const hello = useRef("Hello")，我的 ref.current 就是 Hello，通常會使用在 <input> 內使用。

5.在 Function 內設定的就是區域變數 (內容會在該 Function return 時結束)，在 Components 外設定的是全域變數 (內容可以用在任何的 Function 內使用)


1119 :
創建屬於自己的 Components (forwardRef、useImperativeHandle)
input、chechbox、select、button

forwardRef、useImperativeHandle 測驗 : 
基礎問題

1.forwardRef 的作用是什麼？為什麼我們需要它？
接收外部的 props 與 ref，因為 React 只能是單向的傳遞，但使用 forwardRef 可以達成雙向傳遞的效果

2.當父元件使用 useRef 傳遞給子元件時，子元件會如何接收這個 ref？是通過哪個參數？
會使用 forwardRef 的第二個參數 ref 來接收父元件傳遞的 ref。

3.如果子元件中沒有使用 useImperativeHandle，那麼父元件的 ref.current 會是什麼？
會是父元件內 useRef("XXXXX") 的 XXXXX 
進階問題

4.在 useImperativeHandle 中，第一個參數 ref 是什麼？它的來源是什麼？
是由子元件 forwardRef 第二個參數接收到的 ref，它的來源是父元件內設定的 useRef

5.在 useImperativeHandle 中，第二個參數是一個函式，它的返回值是什麼，返回的內容會被用在哪裡？
I don't know

6.在 useImperativeHandle 中為什麼要有第三個參數（依賴陣列）？如果不提供這個陣列會發生什麼情況？
如果沒有設定依賴陣列 []，只會在 Render 時執行一次，若有，會在該依賴陣列改變時重新 Render

情境問題
7.如果你想讓父元件控制子元件的 input，如聚焦或清除內容，如何設計一個有 forwardRef 和 useImperativeHandle 的子元件來實現？（用文字或程式碼簡述）

8.如果 useImperativeHandle 中返回了 { increment: () => setCount(count + 1) }，父元件要如何呼叫 increment？
9.你認為 useImperativeHandle 的最佳使用場景是什麼？可以舉一個你能想像的例子嗎？


11/26
1.請問 useLayoutEffect 與 useEffect 的主要差別是什麼？
DOM 更新完成 -> 畫面 Render 完成後執行 -> useLayoutEffect -> 最後才是 useEffect

2.useMemo 的作用是什麼？請簡單解釋。
useMemo : 用於儲存計算好的數值

3.useCallback 的作用是什麼？請簡單解釋。
useCallback : 用於儲存函式

4.React.memo 的作用是什麼？請簡單解釋。
React.memo : 當子元件有設定 React.memo 時，會根據傳遞來的 props 去看父元件的 props 是否有更新
如果有更新的話會 Re-Redner 子元件，通常搭配 useCallback 使用

12/03 
使用 QueryClient 獲取資料，使用 useQuery 顯示資料，使用 useMediaQuery 達成 RWD 效果。
React Query 的核心流程是：
 初始化 QueryClient: 在父元件內創建一個 QueryClient 實例。
 提供 QueryClient: 使用 QueryClientProvider，將它傳遞給應用中的子元件。
 抓取資料: 在子元件中，使用 useQuery 去呼叫 API 並獲取資料。

QueryClient =>
const queryClient = new QueryClient()
<QueryClientProvider client={queryClient}>
  <Component....... />
</QueryClientProvider>
useQuery => 很多參數需要釐清
useMediaQuery

12/10
1.BrowerRouter,Routes,Route,
1.5createBrowserRouter,RouterProvider router={XXXXXX}
2.createBrowserRouter
3.RouterProvider
4.useContext
5.useNavigate
6.useLocation

1. BrowserRouter, Routes, Route 問題：
什麼是 BrowserRouter？它的主要功能是什麼？
Routes 和 Route 的關係是什麼？在定義路由時，path 和 element 各代表什麼？

回答 :
1-1 BrowerRouter 的主要功能是在 <BrowerRouter> 內部放入 Routes 與 Route </BrowerRouter>
1-2 Route 要放在 Routes 內部，path 是要指向的路徑，element 是 path 路徑的 Component ? 
假如path的路徑是 book path="/" 那 element 就會是一個 book 的 Component => path="/book" element={<Book/>}


1.5 createBrowserRouter, RouterProvider 問題：
createBrowserRouter 與 BrowserRouter 的功能有什麼區別？
如何使用 RouterProvider 將 createBrowserRouter 的路由設定應用到整個 React 應用？

回答 :
1.5-1 createBrowserRouter 以陣列的方式設定路由，並多了 loader,action、errorElemet 的功能

1.5-2 先 const Router = createBrowserRouter([{path:"/book",element:</Book>}])，再 return RouterProvider router={Router}

2.createBrowserRouter 問題：
createBrowserRouter 是如何定義路由的？它支持哪些屬性？
如何在路由中設置 errorElement 來處理錯誤頁面？

回答 :
2-1 透過這些屬性來設定 
path：路徑。
element：對應的元件。
loader：用於加載資料。
action：用於處理表單提交等操作。
errorElement：定義錯誤頁面。

2-2 errorElement:<Page404/>

3.RouterProvider 問題：
RouterProvider 有哪些功能？為什麼要用它？
如何將 RouterProvider 和 createBrowserRouter 結合？

回答 :
3-1 提供路由設定的完整功能，支援新 API（如 loader 和 action）。

3-2 使用以下即可將 RouterProvider 和 createBrowserRouter 結合
const Router = createBrowserRouter([{path:"/book",element:</Book>}])，再 return RouterProvider router={Router} 

4.useContext 問題：
useContext 的用途是什麼？它如何幫助元件間共享狀態？
為什麼需要 Context.Provider？如果省略，會發生什麼？
如何與 createContext 配合使用，提供全域資料？

4-1 useContext 簡化了元件之間共享狀態的流程，讓我們可以直接取得 Context.Provider 提供的值，而無需使用 props 層層傳遞。
4-2 如果省略的話能使用 props 的方式來傳遞，使用 useContext 的話只會取得 createContext 設定的預設值。
4-3 Context 中 createContext，並將須使用該資料的 Component 放式 Provider 內，在到 Component 中使用 useContext，const {XXX,XXX} = useContext 

問題：
useNavigate 的功能是什麼？如何用它來導航至指定路徑？
如何使用 state 傳遞資料？被導航的頁面如何接收？

5-1 useNavigate 是用於程式化導航的 React Hook，允許開發者在代碼中導航至指定的路徑。 
5-2 const navigate = useNavigate();
navigate("/path", { state: { key: "value" } });

const location = useLocation();
console.log(location.state?.key); // "value"

6.useLocation 問題：
useLocation 的功能是什麼？如何從中讀取目前的路徑資訊？
useLocation 如何與 useNavigate 一起使用來傳遞資料？

6-1 
const location = useLocation()，其中包含的物件有 : 
pathname：目前的路徑。
search：查詢參數。
hash：URL 的 hash 部分。
state：透過 useNavigate 傳遞的資料。

6-2 Homepage 使用 
const navigate : useNavigate()，並在事件內設定 navigate(path="/book" state:{key:"被討厭的勇氣"})
在 book 使用 
const location = useLocation，使用 location.state?.key => 被討厭的勇氣
前面加個 ? 可以防止沒有找到 key 顯示不出來的狀況。